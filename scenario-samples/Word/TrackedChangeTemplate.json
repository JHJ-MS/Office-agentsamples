{
	"Templates": [
    {
        "Description": "Word TrackedChanges. Get, set the change tracking mode. Get the reviewed text.",
        "SampleCodes": "async function getChangeTrackingMode() {\n  // Gets the current change tracking mode.\n  await Word.run(async (context) => {\n    const document = context.document;\n    document.load(\"changeTrackingMode\");\n    await context.sync();\n\n    if (document.changeTrackingMode === Word.ChangeTrackingMode.trackMineOnly) {\n      console.log(\"Only my changes are being tracked.\");\n    } else if (document.changeTrackingMode === Word.ChangeTrackingMode.trackAll) {\n      console.log(\"Everyone's changes are being tracked.\");\n    } else {\n      console.log(\"No changes are being tracked.\");\n    }\n  });\n}\n\nasync function setChangeTrackingMode() {\n  // Sets the change tracking mode.\n  await Word.run(async (context) => {\n    const mode = $(\"input[name='mode']:checked\").val();\n    if (mode === \"Track only my changes\") {\n      context.document.changeTrackingMode = Word.ChangeTrackingMode.trackMineOnly;\n    } else if (mode === \"Track everyone's changes\") {\n      context.document.changeTrackingMode = Word.ChangeTrackingMode.trackAll;\n    } else {\n      context.document.changeTrackingMode = Word.ChangeTrackingMode.off;\n    }\n\n    await context.sync();\n\n    getChangeTrackingMode();\n  });\n}\n\nasync function getReviewedText() {\n  // Gets the reviewed text.\n  await Word.run(async (context) => {\n    const range = context.document.getSelection();\n    const before = range.getReviewedText(Word.ChangeTrackingVersion.original);\n    const after = range.getReviewedText(Word.ChangeTrackingVersion.current);\n\n    await context.sync();\n\n    console.log(`Reviewed text (before):\n${before.value}`);\n    console.log(`Reviewed text (after):\n${after.value}`);\n  });\n}"
    }
	]
}