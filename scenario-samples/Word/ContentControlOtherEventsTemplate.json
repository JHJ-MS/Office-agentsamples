{
	"Templates": [
		{
			"Description": "Register, trigger and deregister enter, data change, exit and delete events for content controls.",
			"SampleCodes": "let eventContexts = [];\n\nasync function insertContentControls() {\n  // Traverses each paragraph of the document and wraps a content control on each.\n  await Word.run(async (context) => {\n    const paragraphs = context.document.body.paragraphs;\n    paragraphs.load(\"$none\"); // Don't need any properties; just wrap each paragraph with a content control.\n\n    await context.sync();\n\n    for (let i = 0; i < paragraphs.items.length; i++) {\n      let contentControl = paragraphs.items[i].insertContentControl();\n      contentControl.tag = \"forTesting\";\n    }\n\n    console.log(\"Content controls inserted: \" + paragraphs.items.length);\n\n    await context.sync();\n  });\n}\n\nasync function registerEventHandlers() {\n  await Word.run(async (context) => {\n    const contentControls = context.document.contentControls;\n    contentControls.load(\"items\");\n    await context.sync();\n\n    // Register the onEntered event handler on each content control.\n    if (contentControls.items.length === 0) {\n      console.log(\"There aren't any content controls in this document so can't register event handlers.\");\n    } else {\n      for (let i = 0; i < contentControls.items.length; i++) {\n        eventContexts[5i] = contentControls.items[i].onEntered.add(contentControlEntered);\n        eventContexts[5i+1] = contentControls.items[i].onSelectionChanged.add(contentControlSelectionChanged);\n        eventContexts[5i+2] = contentControls.items[i].onDataChanged.add(contentControlDataChanged);\n        eventContexts[5i+3] = contentControls.items[i].onExited.add(contentControlExited);\n        eventContexts[5i+4] = contentControls.items[i].onDeleted.add(contentControlDeleted);\n        contentControls.items[i].track();\n      }\n\n      await context.sync();\n\n      console.log(\"Added event handlers for when the cursor is placed in content controls.\");\n    }\n  });\n}\n\nasync function contentControlEntered(event: Word.ContentControlEnteredEventArgs) {\n  await Word.run(async (context) => {\n    console.log(`${event.eventType} event detected. ID of content control that was entered: ${event.ids[0]}`);\n  });\n}\n\nasync function contentControlSelectionChanged(event: Word.ContentControlSelectionChangedEventArgs) {\n  await Word.run(async (context) => {\n    console.log(`${event.eventType} event detected. IDs of content controls where selection was changed:`, event.ids);\n  });\n}\n\nasync function contentControlDataChanged(event: Word.ContentControlDataChangedEventArgs) {\n  await Word.run(async (context) => {\n    console.log(`${event.eventType} event detected. IDs of content controls where data was changed:`, event.ids);\n  });\n}\n\nasync function contentControlExited(event: Word.ContentControlExitedEventArgs) {\n  await Word.run(async (context) => {\n    console.log(`${event.eventType} event detected. ID of content control that was exited: ${event.ids[0]}`);\n  });\n}\n\nasync function contentControlDeleted(event: Word.ContentControlDeletedEventArgs) {\n  await Word.run(async (context) => {\n    console.log(`${event.eventType} event detected. IDs of content controls that were deleted:`, event.ids);\n  });\n}\n\nasync function deregisterEventHandlers() {\n  await Word.run(async (context) => {\n    for (let i = 0; i < eventContexts.length; i++) {\n      await Word.run(eventContexts[i].context, async (context) => {\n        eventContexts[i].remove();\n      });\n    }\n\n    await context.sync();\n\n    eventContexts = [];\n    console.log(\"Removed event handlers that were tracking when the cursor is placed in content controls.\");\n  });\n}\n\nasync function setup() {\n  await Word.run(async (context) => {\n    const body = context.document.body;\n    body.clear();\n    body.insertParagraph(\"One more paragraph. \", \"Start\");\n    body.insertParagraph(\"Inserting another paragraph. \", \"Start\");\n    body.insertParagraph(\n      \"Video provides a powerful way to help you prove your point. When you click Online Video, you can paste in the embed code for the video you want to add. You can also type a keyword to search online for the video that best fits your document.\",\n      \"Start\"\n    );\n    body.paragraphs\n      .getLast()\n      .insertText(\n        \"To make your document look professionally produced, Word provides header, footer, cover page, and text box designs that complement each other. For example, you can add a matching cover page, header, and sidebar. Click Insert and then choose the elements you want from the different galleries. \",\n        \"Replace\"\n      );\n  });\n}"
		}
	]
}