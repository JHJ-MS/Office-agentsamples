{
	"Templates": [
		{
			"Description": "Create a table. Insert text in a table cell. Get the formatting details of a table, a table row, and a table cell, including borders, alignment, and cell padding.",
			"SampleCodes": "async function getTableCell() {\n  // Gets the content of the first cell in the first table.\n  await Word.run(async (context) => {\n    const firstCell = context.document.body.tables.getFirst().getCell(0, 0).body;\n    firstCell.load(\"text\");\n\n    await context.sync();\n    console.log(\"First cell's text is: \" + firstCell.text);\n  });\n}\n\nasync function insertTextIntoTableCell() {\n  // Access the first cell of the table and Insert text.\n  await Word.run(async (context) => {\n    const firstCell = context.document.body.tables.getFirst().getCell(0, 0);\n    firstCell.load();\n    await context.sync();\n\n    // Insert 'hello' into the first cell\n    firstCell.body.insertText('Hello World', 'Start');\n    await context.sync();\n    console.log(\"'Hello World' inserted into the first cell.\");\n  });\n}\n\nasync function insertTable() {\n  await Word.run(async (context) => {\n    // Use a two-dimensional array to hold the initial table values.\n    const data = [\n      [\"Tokyo\", \"Beijing\", \"Seattle\"],\n      [\"Apple\", \"Orange\", \"Pineapple\"]\n    ];\n    const table = context.document.body.insertTable(2, 3, \"Start\", data);\n    table.styleBuiltIn = Word.BuiltInStyleName.gridTable5Dark_Accent2;\n    table.styleFirstColumn = false;\n\n    await context.sync();\n  });\n}\n\nasync function getTableAlignment() {\n  // Gets alignment details about the first table in the document.\n  await Word.run(async (context) => {\n    const firstTable = context.document.body.tables.getFirst();\n    firstTable.load([\"alignment\", \"horizontalAlignment\", \"verticalAlignment\"]);\n    await context.sync();\n\n    console.log(`Details about the alignment of the first table:`);\n    console.log(`- Alignment of the table within the containing page column: ${firstTable.alignment}`);\n    console.log(`- Horizontal alignment of every cell in the table: ${firstTable.horizontalAlignment}`);\n    console.log(`- Vertical alignment of every cell in the table: ${firstTable.verticalAlignment}`);\n  });\n}\n\nasync function getTableBorder() {\n  // Gets border details about the first table in the document.\n  await Word.run(async (context) => {\n    const firstTable = context.document.body.tables.getFirst();\n    const borderLocation = Word.BorderLocation.top;\n    const border = firstTable.getBorder(borderLocation);\n    border.load([\"type\", \"color\", \"width\"]);\n    await context.sync();\n\n    console.log(`Details about the ${borderLocation} border of the first table:`);\n    console.log(`- Color: ${border.color}`);\n    console.log(`- Type: ${border.type}`);\n    console.log(`- Width: ${border.width} points`);\n  });\n}\n\nasync function getTableCellPadding() {\n  // Gets cell padding details about the first table in the document.\n  await Word.run(async (context) => {\n    const firstTable = context.document.body.tables.getFirst();\n    const cellPaddingLocation = Word.CellPaddingLocation.right;\n    const cellPadding = firstTable.getCellPadding(cellPaddingLocation);\n    await context.sync();\n\n    console.log(\n      `Cell padding details about the ${cellPaddingLocation} border of the first table: ${cellPadding.value} points`\n    );\n  });\n}\n\nasync function getTableRowAlignment() {\n  // Gets content alignment details about the first row of the first table in the document.\n  await Word.run(async (context) => {\n    const firstTable = context.document.body.tables.getFirst();\n    const firstTableRow = firstTable.rows.getFirst();\n    firstTableRow.load([\"horizontalAlignment\", \"verticalAlignment\"]);\n    await context.sync();\n\n    console.log(`Details about the alignment of the first table's first row:`);\n    console.log(`- Horizontal alignment of every cell in the row: ${firstTableRow.horizontalAlignment}`);\n    console.log(`- Vertical alignment of every cell in the row: ${firstTableRow.verticalAlignment}`);\n  });\n}\n\nasync function getTableRowBorder() {\n  // Gets border details about the first row of the first table in the document.\n  await Word.run(async (context) => {\n    const firstTable = context.document.body.tables.getFirst();\n    const firstTableRow = firstTable.rows.getFirst();\n    const borderLocation = Word.BorderLocation.bottom;\n    const border = firstTableRow.getBorder(borderLocation);\n    border.load([\"type\", \"color\", \"width\"]);\n    await context.sync();\n\n    console.log(`Details about the ${borderLocation} border of the first table's first row:`);\n    console.log(`- Color: ${border.color}`);\n    console.log(`- Type: ${border.type}`);\n    console.log(`- Width: ${border.width} points`);\n  });\n}\n\nasync function getTableRowCellPadding() {\n  // Gets cell padding details about the first row of the first table in the document.\n  await Word.run(async (context) => {\n    const firstTable = context.document.body.tables.getFirst();\n    const firstTableRow = firstTable.rows.getFirst();\n    const cellPaddingLocation = Word.CellPaddingLocation.bottom;\n    const cellPadding = firstTableRow.getCellPadding(cellPaddingLocation);\n    await context.sync();\n\n    console.log(\n      `Cell padding details about the ${cellPaddingLocation} border of the first table's first row: ${cellPadding.value} points`\n    );\n  });\n}\n\nasync function getTableCellAlignment() {\n  // Gets content alignment details about the first cell of the first table in the document.\n  await Word.run(async (context) => {\n    const firstTable = context.document.body.tables.getFirst();\n    const firstCell = firstTable.getCell(0, 0);\n    firstCell.load([\"horizontalAlignment\", \"verticalAlignment\"]);\n    await context.sync();\n\n    console.log(`Details about the alignment of the first table's first cell:`);\n    console.log(`- Horizontal alignment of the cell's content: ${firstCell.horizontalAlignment}`);\n    console.log(`- Vertical alignment of the cell's content: ${firstCell.verticalAlignment}`);\n  });\n}\n\nasync function getTableCellBorder() {\n  // Gets border details about the first of the first table in the document.\n  await Word.run(async (context) => {\n    const firstTable = context.document.body.tables.getFirst();\n    const firstCell = firstTable.getCell(0, 0);\n    const borderLocation = \"Left\";\n    const border = firstCell.getBorder(borderLocation);\n    border.load([\"type\", \"color\", \"width\"]);\n    await context.sync();\n\n    console.log(`Details about the ${borderLocation} border of the first table's first cell:`);\n    console.log(`- Color: ${border.color}`);\n    console.log(`- Type: ${border.type}`);\n    console.log(`- Width: ${border.width} points`);\n  });\n}\n\nasync function getTableCellCellPadding() {\n  // Gets cell padding details about the first cell of the first table in the document.\n  await Word.run(async (context) => {\n    const firstTable = context.document.body.tables.getFirst();\n    const firstCell = firstTable.getCell(0, 0);\n    const cellPaddingLocation = \"Left\";\n    const cellPadding = firstCell.getCellPadding(cellPaddingLocation);\n    await context.sync();\n\n    console.log(\n      `Cell padding details about the ${cellPaddingLocation} border of the first table's first cell: ${cellPadding.value} points`\n    );\n  });\n}"
		}
	]
}