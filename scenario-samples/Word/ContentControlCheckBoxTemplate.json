{
	"Templates": [
		{
			"Description": "Inserts, updates retrieves and deletes checkbox content controls.",
			"SampleCodes": "async function insertCheckboxContentControls() {\n  // Traverses each paragraph of the document and places a checkbox content control at the beginning of each.\n  await Word.run(async (context) => {\n    let paragraphs = context.document.body.paragraphs;\n    paragraphs.load(\"$none\"); // Don't need any properties; just start each paragraph with a content control.\n\n    await context.sync();\n\n    for (let i = 0; i < paragraphs.items.length; i++) {\n      let contentControl = paragraphs.items[i]\n        .getRange(Word.RangeLocation.start)\n        .insertContentControl(Word.ContentControlType.checkBox);\n    }\n    console.log(\"Checkbox content controls inserted: \" + paragraphs.items.length);\n\n    await context.sync();\n  });\n}\n\nasync function toggleCheckboxContentControls() {\n  // Toggles the isChecked property on all checkbox content controls.\n  await Word.run(async (context) => {\n    let contentControls = context.document.getContentControls({\n      types: [Word.ContentControlType.checkBox]\n    });\n    contentControls.load(\"items\");\n\n    await context.sync();\n\n    const length = contentControls.items.length;\n    console.log(`Number of checkbox content controls: ${length}`);\n\n    if (length <= 0) {\n      return;\n    }\n\n    const checkboxContentControls = [];\n    for (let i = 0; i < length; i++) {\n      let contentControl = contentControls.items[i];\n      contentControl.load(\"id,checkboxContentControl/isChecked\");\n      checkboxContentControls.push(contentControl);\n    }\n\n    await context.sync();\n\n    console.log(\"isChecked state before:\");\n    const updatedCheckboxContentControls = [];\n    for (let i = 0; i < checkboxContentControls.length; i++) {\n      const currentCheckboxContentControl = checkboxContentControls[i];\n      const isCheckedBefore = currentCheckboxContentControl.checkboxContentControl.isChecked;\n      console.log(`id: ${currentCheckboxContentControl.id} ... isChecked: ${isCheckedBefore}`);\n\n      currentCheckboxContentControl.checkboxContentControl.isChecked = !isCheckedBefore;\n      currentCheckboxContentControl.load(\"id,checkboxContentControl/isChecked\");\n      updatedCheckboxContentControls.push(currentCheckboxContentControl);\n    }\n\n    await context.sync();\n\n    console.log(\"isChecked state after:\");\n    for (let i = 0; i < updatedCheckboxContentControls.length; i++) {\n      const currentCheckboxContentControl = updatedCheckboxContentControls[i];\n      console.log(\n        `id: ${currentCheckboxContentControl.id} ... isChecked: ${currentCheckboxContentControl.checkboxContentControl.isChecked}`\n      );\n    }\n  });\n}\n\nasync function deleteCheckboxContentControl() {\n  // Deletes the first checkbox content control found in the selection.\n  await Word.run(async (context) => {\n    const selectedRange = context.document.getSelection();\n    let selectedContentControl = selectedRange\n      .getContentControls({\n        types: [Word.ContentControlType.checkBox]\n      })\n      .getFirstOrNullObject();\n    selectedContentControl.load(\"id\");\n\n    await context.sync();\n\n    if (selectedContentControl.isNullObject) {\n      const parentContentControl = selectedRange.parentContentControl;\n      parentContentControl.load(\"id,type\");\n      await context.sync();\n\n      if (parentContentControl.isNullObject || parentContentControl.type !== Word.ContentControlType.checkBox) {\n        console.warn(\"No checkbox content control is currently selected.\");\n        return;\n      } else {\n        selectedContentControl = parentContentControl;\n      }\n    }\n\n    console.log(`About to delete checkbox content control with id: ${selectedContentControl.id}`);\n    selectedContentControl.delete(false);\n    await context.sync();\n\n    console.log(\"Deleted checkbox content control.\");\n  });\n}\n\nasync function setup() {\n  await Word.run(async (context) => {\n    const body = context.document.body;\n    body.clear();\n    body.insertParagraph(\"Task 3\", \"Start\");\n    body.insertParagraph(\"Task 2\", \"Start\");\n    body.insertParagraph(\"Task 1\", \"Start\");\n    body.paragraphs.getLast().insertText(\"Task 4\", \"Replace\");\n  });\n}"
		}
	]
}