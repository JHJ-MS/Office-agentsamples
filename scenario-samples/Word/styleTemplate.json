{
    "Templates": [
        {
            "Description": "Gets the number of styles. Adds a new style. Gets the properties of the specified style. Applies the specified style to a paragraph. Updates font properties of the specified style. Sets the specified style's paragraph format. Deletes the custom style.",
            "SampleCodes": "async function getCount() {\n  // Gets the number of styles.\n  await Word.run(async (context) => {\n    const styles = context.document.getStyles();\n    const count = styles.getCount();\n    await context.sync();\n\n    console.log(`Number of styles: ${count.value}`);\n  });\n}\n\nasync function addStyle() {\n  // Adds a new style.\n  await Word.run(async (context) => {\n    const newStyleName = $(\"#new-style-name\").val() as string;\n    if (newStyleName == \"\") {\n      console.warn(\"Enter a style name to add.\");\n      return;\n    }\n\n    const style = context.document.getStyles().getByNameOrNullObject(newStyleName);\n    style.load();\n    await context.sync();\n\n    if (!style.isNullObject) {\n      console.warn(\n        `There's an existing style with the same name '${newStyleName}'! Please provide another style name.`\n      );\n      return;\n    }\n\n    const newStyleType = ($(\"#new-style-type\").val() as unknown) as Word.StyleType;\n    context.document.addStyle(newStyleName, newStyleType);\n    await context.sync();\n\n    console.log(newStyleName + \" has been added to the style list.\");\n  });\n}\n\nasync function getProperties() {\n  // Gets the properties of the specified style.\n  await Word.run(async (context) => {\n    const styleName = $(\"#style-name-to-use\").val() as string;\n    if (styleName == \"\") {\n      console.warn(\"Enter a style name to get properties.\");\n      return;\n    }\n\n    const style = context.document.getStyles().getByNameOrNullObject(styleName);\n    style.load();\n    await context.sync();\n\n    if (style.isNullObject) {\n      console.warn(`There's no existing style with the name '${styleName}'.`);\n    } else {\n      style.font.load();\n      style.paragraphFormat.load();\n      await context.sync();\n\n      console.log(`Properties of the '${styleName}' style:`);\n      console.log(style);\n    }\n  });\n}\n\nasync function applyStyle() {\n  // Applies the specified style to a paragraph.\n  await Word.run(async (context) => {\n    const styleName = $(\"#style-name-to-use\").val() as string;\n    if (styleName == \"\") {\n      console.warn(\"Enter a style name to apply.\");\n      return;\n    }\n\n    const style = context.document.getStyles().getByNameOrNullObject(styleName);\n    style.load();\n    await context.sync();\n\n    if (style.isNullObject) {\n      console.warn(`There's no existing style with the name '${styleName}'.`);\n    } else if (style.type != Word.StyleType.paragraph) {\n      console.log(`The '${styleName}' style isn't a paragraph style.`);\n    } else {\n      const body = context.document.body;\n      body.clear();\n      body.insertParagraph(\n        \"Video provides a powerful way to help you prove your point. When you click Online Video, you can paste in the embed code for the video you want to add. You can also type a keyword to search online for the video that best fits your document.\",\n        \"Start\"\n      );\n      const paragraph = body.paragraphs.getFirst();\n      paragraph.style = style.nameLocal;\n      console.log(`'${styleName}' style applied to first paragraph.`);\n    }\n  });\n}\n\nasync function setFontProperties() {\n  // Updates font properties (e.g., color, size) of the specified style.\n  await Word.run(async (context) => {\n    const styleName = $(\"#style-name\").val() as string;\n    if (styleName == \"\") {\n      console.warn(\"Enter a style name to update font properties.\");\n      return;\n    }\n\n    const style = context.document.getStyles().getByNameOrNullObject(styleName);\n    style.load();\n    await context.sync();\n\n    if (style.isNullObject) {\n      console.warn(`There's no existing style with the name '${styleName}'.`);\n    } else {\n      const font = style.font;\n      font.color = \"#FF0000\";\n      font.size = 20;\n      console.log(`Successfully updated font properties of the '${styleName}' style.`);\n    }\n  });\n}\n\nasync function setParagraphFormat() {\n  // Sets certain aspects of the specified style's paragraph format e.g., the left indent size and the alignment.\n  await Word.run(async (context) => {\n    const styleName = $(\"#style-name\").val() as string;\n    if (styleName == \"\") {\n      console.warn(\"Enter a style name to update its paragraph format.\");\n      return;\n    }\n\n    const style = context.document.getStyles().getByNameOrNullObject(styleName);\n    style.load();\n    await context.sync();\n\n    if (style.isNullObject) {\n      console.warn(`There's no existing style with the name '${styleName}'.`);\n    } else {\n      style.paragraphFormat.leftIndent = 30;\n      style.paragraphFormat.alignment = Word.Alignment.centered;\n      console.log(`Successfully the paragraph format of the '${styleName}' style.`);\n    }\n  });\n}\n\nasync function deleteStyle() {\n  // Deletes the custom style.\n  await Word.run(async (context) => {\n    const styleName = $(\"#style-name-to-delete\").val() as string;\n    if (styleName == \"\") {\n      console.warn(\"Enter a style name to delete.\");\n      return;\n    }\n\n    const style = context.document.getStyles().getByNameOrNullObject(styleName);\n    style.load();\n    await context.sync();\n\n    if (style.isNullObject) {\n      console.warn(`There's no existing style with the name '${styleName}'.`);\n    } else {\n      style.delete();\n      console.log(`Successfully deleted custom style '${styleName}'.`);\n    }\n  });\n}"
        }
    ]
}