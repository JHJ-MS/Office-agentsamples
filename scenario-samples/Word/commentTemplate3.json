{
  "Templates": [
    {
      "Description": "Get all the comments in the document, selection, insert a new comment, delete a comment, and reply to a comment.",
      "SampleCodes": "\r\nasync function insertComment() {\r\n  \/\/ Adds a comment on the selected content.\r\n  await Word.run(async (context) => {\r\n    const text = $(\"#comment-text\")\r\n      .val()\r\n      .toString();\r\n    const comment = context.document.getSelection().insertComment(text);\r\n\r\n    \/\/ Load object to access the properties\r\n    comment.load(\"id, authorEmail, authorName, content, creationDate, resolved, replies\");\r\n    await context.sync();\r\n\r\n    console.log(\"Comment inserted:\");\r\n    console.log(comment);\r\n  });\r\n}\r\n\r\nasync function editFirstCommentInSelection() {\r\n  \/\/ Edits the first comment in the selected content.\r\n  await Word.run(async (context) => {\r\n    const text = $(\"#edit-comment-text\")\r\n      .val()\r\n      .toString();\r\n    const comment = context.document\r\n      .getSelection()\r\n      .getComments()\r\n      .getFirst();\r\n    comment.content = text; \/\/ update the content of the comment\r\n\r\n    \/\/ Load object to access the properties\r\n    comment.load();\r\n    await context.sync();\r\n\r\n    console.log(\"Comment content changed:\");\r\n    console.log(comment);\r\n  });\r\n}\r\n\r\nasync function replyToFirstActiveCommentInSelection() {\r\n  \/\/ Replies to the first active comment in the selected content.\r\n  await Word.run(async (context) => {\r\n    const text = $(\"#reply-text\")\r\n      .val()\r\n      .toString();\r\n    const comments = context.document.getSelection().getComments();\r\n    comments.load(\"items\");\r\n    await context.sync();\r\n    const firstActiveComment = comments.items.find((item) => item.resolved !== true);\r\n    if (firstActiveComment) {\r\n      const reply = firstActiveComment.reply(text); \/\/ add a reply to the comment\r\n      console.log(\"Reply added\");\r\n    } else {\r\n      console.log(\"No active comment was found in the selection so couldn't reply.\");\r\n    }\r\n  });\r\n}\r\n\r\nasync function toggleResolvedStatusOfFirstCommentInSelection() {\r\n  \/\/ Toggles Resolved status of the first comment in the selected content.\r\n  await Word.run(async (context) => {\r\n    const comment = context.document\r\n      .getSelection()\r\n      .getComments()\r\n      .getFirst();\r\n    comment.load(\"resolved\");\r\n    await context.sync();\r\n\r\n    \/\/ Toggle resolved status.\r\n    \/\/ If the comment is active, set as resolved.\r\n    \/\/ If it's resolved, set resolved to false.\r\n    const toggleResolved: boolean = comment.resolved;\r\n    comment.resolved = !toggleResolved;\r\n    comment.load();\r\n    await context.sync();\r\n\r\n    console.log(`Comment Resolved status: ${comment.resolved}`);\r\n    console.log(comment);\r\n  });\r\n}\r\n\r\nasync function getFirstCommentRange() {\r\n  \/\/ Gets the range of the first comment in the selected content.\r\n  await Word.run(async (context) => {\r\n    const range = context.document\r\n      .getSelection()\r\n      .getComments()\r\n      .getFirst()\r\n      .getRange();\r\n    range.load(\"text\");\r\n    await context.sync();\r\n\r\n    console.log(`Comment location: ${range.text}`);\r\n  });\r\n}\r\n\r\nasync function getCommentsInSelection() {\r\n  \/\/ Gets the comments in the selected content.\r\n  await Word.run(async (context) => {\r\n    const comments = context.document.getSelection().getComments();\r\n\r\n    \/\/ Load objects to access the properties\r\n    comments.load(\"id, authorEmail, authorName, content, creationDate, resolved, replies\");\r\n    await context.sync();\r\n\r\n    console.log(\"Comments:\");\r\n    console.log(comments);\r\n  });\r\n}\r\n\r\nasync function deleteFirstCommentInSelection() {\r\n  \/\/ Deletes the first comment in the selected content.\r\n  await Word.run(async (context) => {\r\n    context.document\r\n      .getSelection()\r\n      .getComments()\r\n      .getFirst()\r\n      .delete();\r\n    await context.sync();\r\n\r\n    console.log(\"Comment deleted\");\r\n  });\r\n}\r\n\r\nasync function getComments() {\r\n  \/\/ Gets the comments in the document body.\r\n  await Word.run(async (context) => {\r\n    const comments = context.document.body.getComments();\r\n\r\n    \/\/ Load objects to access the properties\r\n    comments.load();\r\n    await context.sync();\r\n\r\n    console.log(\"All comments:\");\r\n    console.log(comments);\r\n  });\r\n}"
    }
  ]
}