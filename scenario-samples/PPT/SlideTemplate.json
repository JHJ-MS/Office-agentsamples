{
  "Templates": [
    {
      "Description": "Sample codes about slide apis, including get slide by index, add insert a new slide, get the active selected slides and delete a slide",
      "SampleCodes": "async function getSlide() {  await PowerPoint.run(async function (context) {    // first get all the slides    const allSlides = context.presentation.slides;    allSlides.load();    await context.sync();    for (let i = 0; i < allSlides.items.length; i++) {      const slide = allSlides.getItemAt(i); // get a slide by its index      slide.load(\"id, layout, shapes, slideMaster, tags\");      await context.sync();      console.log(slide.id);    }  });}async function addSlide() {  // add a powerpoint slide  await PowerPoint.run(async function(context) {    const slideMasters = context.presentation.slideMasters;    slideMasters.load(\"id, name, layouts/items/name, layouts/items/id\");    await context.sync();    // load the slideMaster and layout to get their ID    for (let i = 0; i < slideMasters.items.length; i++) {      console.log(\"Master name: \" + slideMasters.items[i].name);      console.log(\"Master ID: \" + slideMasters.items[i].id);      const layoutsInMaster = slideMasters.items[i].layouts;      for (let j = 0; j < layoutsInMaster.items.length; j++) {        console.log(\"    Layout name: \" + layoutsInMaster.items[j].name + \" Layout ID: \" + layoutsInMaster.items[j].id);      }    }        // add a slide with provided slideMasterId, layoutId    context.presentation.slides.add({      slideMasterId: slideMasters.items[0].id,      layoutId: slideMasters.items[0].layouts.items[0].id    });    await context.sync();  });}async function getSelectedSlides() {  // Gets the selected slides and displays their IDs on the task pane.  await PowerPoint.run(async (context) => {    context.presentation.load(\"slides\");    await context.sync();    const allSlidesCount = context.presentation.slides.getCount();    context.presentation.slides.load(\"items\");    await context.sync();    const selectedSlides = context.presentation.getSelectedSlides(); // get selected slides    const slideCount = selectedSlides.getCount();    selectedSlides.load(\"items\");    await context.sync();    console.log(slideCount.value);  });}async function deleteSlides() {  // Deletes the selected slides.  await PowerPoint.run(async (context) => {    context.presentation.load(\"slides\");    await context.sync();    const slides = context.presentation.getSelectedSlides();    const slideCount = slides.getCount();    slides.load(\"items\");    await context.sync();    slides.items.map((slide) => {      slide.delete();    });  });}"
    }
  ]
}