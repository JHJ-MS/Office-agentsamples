{
	"Templates": [
		{
			"Description": "Applies formulas that use dynamic arrays and displays information about the ranges used to display the data.",
			"SampleCodes": "async function copyTableHeaders() {\n  await Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n    // Set G4 to a formula that returns a dynamic array.\n    const targetCell = sheet.getRange(\"G4\");\n    targetCell.formulas = [[\"=A4:D4\"]];\n\n    // Get the address of the cells that the dynamic array spilled into.\n    const spillRange = targetCell.getSpillingToRange();\n    spillRange.load(\"address\");\n\n    // Fit the columns for readability.\n    sheet.getUsedRange().format.autofitColumns();\n    await context.sync();\n\n    console.log(`Copying the table headers spilled into ${spillRange.address}.`);\n  });\n}\n\nasync function applyFilterFunction() {\n  await Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n    /* Set G5 to a formula that returns a dynamic array.\n     * The FILTER formula filters the data in A5:D11 based on the values in the \"C\" column.\n     * The parameter for the filter is \"H2\".\n     */\n    const targetCell = sheet.getRange(\"G5\");\n    targetCell.formulas = [['=FILTER(A5:D11,C5:C11=H2,\"\")']];\n\n    // Get the address of the cells that the dynamic array spilled into.\n    const spillRange = targetCell.getSpillingToRange();\n    spillRange.load(\"address\");\n\n    // Fit the columns for readability.\n    sheet.getUsedRange().format.autofitColumns();\n    await context.sync();\n\n    console.log(`Applying the FILTER formula spilled into ${spillRange.address}.`);\n  });\n}\n\nasync function displaySpillInformation() {\n  await Excel.run(async (context) => {\n    // Check the current cell for any spill parents or spilling-to ranges.\n    const currentRange = context.workbook.getSelectedRange();\n\n    // Spill parent shows the ranges that are causing data to spill into the current cell.\n    const spillParent = currentRange.getSpillParentOrNullObject();\n    spillParent.load(\"address\");\n\n    // Spilling-to range shows the ranges to which this cell is applying the results of a dynamic array.\n    const spillRange = currentRange.getSpillingToRangeOrNullObject();\n    spillRange.load(\"address\");\n    await context.sync();\n\n    // Log the dynamic array information contained within the selected cell.\n    if (!spillParent.isNullObject) {\n      console.log(`The selected cell has a spill parent at ${spillParent.address}`);\n    }\n    if (!spillRange.isNullObject) {\n      console.log(`The selected cell is spilling into ${spillRange.address}`);\n    }\n\n    if (spillParent.isNullObject && spillRange.isNullObject) {\n      console.log(\"The selected cell is not involved with any dynamic arrays (or you have multiple cells selected).\");\n    }\n  });\n}\n\n/** Create a new table with sample data */\nasync function setup() {\n  await Excel.run(async (context) => {\n    context.workbook.worksheets.getItemOrNullObject(\"Sample\").delete();\n    const sheet = context.workbook.worksheets.add(\"Sample\");\n\n    const expensesTable = sheet.tables.add(\"A4:D4\", true /*hasHeaders*/);\n    expensesTable.name = \"ExpensesTable\";\n\n    expensesTable.getHeaderRowRange().values = [[\"Date\", \"Merchant\", \"Category\", \"Amount\"]];\n\n    expensesTable.rows.add(null /*add at the end*/, [\n      [\"1/1/2020\", \"The Phone Company\", \"Communications\", \"$120\"],\n      [\"1/2/2020\", \"Northwind Electric Cars\", \"Transportation\", \"$142\"],\n      [\"1/5/2020\", \"Best For You Organics Company\", \"Groceries\", \"$27\"],\n      [\"1/10/2020\", \"Coho Vineyard\", \"Restaurant\", \"$33\"],\n      [\"1/11/2020\", \"Bellows College\", \"Education\", \"$350\"],\n      [\"1/15/2020\", \"Trey Research\", \"Other\", \"$135\"],\n      [\"1/15/2020\", \"Best For You Organics Company\", \"Groceries\", \"$97\"]\n    ]);\n\n    sheet.getRange(\"A2:H2\").values = [[\"Transactions\", , , , , , \"Category\", \"Groceries\"]];\n    sheet.getRange(\"A2\").style = \"Heading1\";\n    sheet.getRange(\"G2\").style = \"Heading2\";\n    sheet.getRange(\"H2\").format.fill.color = \"#EEEE99\";\n\n    sheet.getUsedRange().format.autofitColumns();\n    sheet.getUsedRange().format.autofitRows();\n\n    sheet.activate();\n    await context.sync();\n  });\n}"
		}
	]
}