{
	"Templates": [
		{
			"Description": "Formats labels and lines of a slope chart.",
			"SampleCodes": "async function formatChart() {\n  await Excel.run(async (context) => {\n    const worksheet = context.workbook.worksheets.getActiveWorksheet();\n    const chart = worksheet.charts.getItem(\"SlopeChart\");\n\n    chart.axes.valueAxis.tickLabelPosition = \"None\";\n    chart.plotArea.width = 800;\n    chart.plotArea.left = 80;\n\n    chart.title.format.font.size = 14.4;\n    chart.title.text = \"Contoso Bike Parts - 2018\";\n    chart.title.format.font.name = \"Times New Roman\";\n    chart.title.format.font.color = \"#D9D9D9\";\n\n    chart.legend.format.font.name = \"Times New Roman\";\n    chart.legend.format.font.color = \"#D9D9D9\";\n\n    chart.axes.categoryAxis.format.font.name = \"Times New Roman\";\n    chart.axes.categoryAxis.format.font.color = \"#D9D9D9\";\n    chart.axes.valueAxis.majorGridlines.format.line.color = \"#585858\";\n    chart.format.fill.setSolidColor(\"#404040\");\n    await context.sync();\n  });\n}\n\nasync function dataLabels() {\n  await Excel.run(async (context) => {\n    const worksheet = context.workbook.worksheets.getActiveWorksheet();\n    const chart = worksheet.charts.getItem(\"SlopeChart\");\n    chart.series.load(\"count\");\n    await context.sync();\n    let pointsLoaded = -1;\n    for (let i = 0; i < chart.series.count; i++) {\n      const series = chart.series.getItemAt(i);\n      series.hasDataLabels = true;\n      series.markerSize = 20;\n\n      series.markerBackgroundColor = \"#404040\";\n      series.markerForegroundColor = \"#404040\";\n\n      // there are an equal number of points in each series, so we only want to load and sync once\n      if (pointsLoaded < 0) {\n        series.points.load(\"count\");\n        await context.sync();\n        pointsLoaded = series.points.count;\n      }\n\n      for (let j = 0; j < pointsLoaded; j++) {\n        // the colors assume \"Format chart\" has been pressed\n        series.points.getItemAt(j).markerBackgroundColor = \"#404040\";\n        series.points.getItemAt(j).markerForegroundColor = \"#404040\";\n      }\n\n      series.points.getItemAt(3).dataLabel.showSeriesName = true;\n    }\n\n    chart.dataLabels.position = \"Center\";\n    chart.dataLabels.separator = \"\n\";\n    chart.dataLabels.format.font.color = \"#D9D9D9\";\n    await context.sync();\n  });\n}\n\nasync function changeColor() {\n  await Excel.run(async (context) => {\n    const worksheet = context.workbook.worksheets.getActiveWorksheet();\n    const chart = worksheet.charts.getItem(\"SlopeChart\");\n    chart.series.load(\"count\");\n    await context.sync();\n\n    // color everything grey before highlighting spokes\n    for (let i = 0; i < chart.series.count; i++) {\n      chart.series.getItemAt(i).format.line.color = \"#636363\";\n      chart.series.getItemAt(i).dataLabels.format.font.color = \"#636363\";\n    }\n\n    const highlight = chart.series.getItemAt(5);\n    highlight.format.line.color = \"#4472C4\";\n    highlight.dataLabels.format.font.color = \"#D9D9D9\";\n\n    highlight.load(\"name\");\n    await context.sync();\n    highlight.name += \" (Focus)\";\n    await context.sync();\n  });\n}\n\nasync function clearChart() {\n  await Excel.run(async (context) => {\n    const charts = context.workbook.worksheets.getActiveWorksheet().charts;\n    charts.load(\"count\");\n    await context.sync();\n\n    for (let i = 0; i < charts.count; i++) {\n      charts.getItemAt(0).delete();\n    }\n    await context.sync();\n  });\n}\n\nasync function setup() {\n  await Excel.run(async (context) => {\n    context.workbook.worksheets.getItemOrNullObject(\"Sample\").delete();\n    const sheet = context.workbook.worksheets.add(\"Sample\");\n\n    let salesTable = sheet.tables.add(\"A1:E1\", true);\n    salesTable.name = \"SalesTable\";\n\n    salesTable.getHeaderRowRange().values = [[\"Product\", \"Qtr1\", \"Qtr2\", \"Qtr3\", \"Qtr4\"]];\n\n    salesTable.rows.add(null, [\n      [\"Frames\", 5000, 7000, 6544, 5377],\n      [\"Saddles\", 400, 323, 276, 1451],\n      [\"Brake levers\", 9000, 8766, 8456, 9812],\n      [\"Chains\", 1550, 1088, 692, 2553],\n      [\"Mirrors\", 225, 600, 923, 344],\n      [\"Spokes\", 6005, 7634, 4589, 8765]\n    ]);\n\n    createChart(context);\n    sheet.activate();\n  });\n}\n\nasync function createChart(context: Excel.RequestContext) {\n  const worksheet = context.workbook.worksheets.getActiveWorksheet();\n  const chart = worksheet.charts.add(\n    Excel.ChartType.lineMarkers,\n    worksheet.getRange(\"A1:E7\"),\n    Excel.ChartSeriesBy.rows\n  );\n  chart.axes.categoryAxis.setCategoryNames(worksheet.getRange(\"B1:E1\"));\n  chart.name = \"SlopeChart\";\n\n  // place chart below sample data\n  chart.top = 125;\n  chart.left = 5;\n  chart.height = 300;\n  chart.width = 450;\n\n  chart.title.text = \"Bicycle Part Production\";\n  chart.legend.position = \"Bottom\";\n\n  await context.sync();\n}"
		}
	]
}