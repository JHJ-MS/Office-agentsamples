{
	"Templates": [
		{
			"Description": "Apply PivotFilters to a PivotTable, including valueFilter, labelFilter, clearFilters.",
			"SampleCodes": "async function valueFilter() {\n  await Excel.run(async (context) => {\n    // Add a PivotFilter to filter on the values correlated with a row.\n\n    // Get the PivotTable.\n    const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem(\"Farm Sales\");\n\n    // Get the \"Farm\" field.\n    const field = pivotTable.hierarchies.getItem(\"Farm\").fields.getItem(\"Farm\");\n\n    // Filter to only include rows with more than 500 wholesale crates sold.\n    const filter: Excel.PivotValueFilter = {\n      condition: Excel.ValueFilterCondition.greaterThan,\n      comparator: 500,\n      value: \"Sum of Crates Sold Wholesale\"\n    };\n\n    // Apply the value filter to the field.\n    field.applyFilter({ valueFilter: filter });\n\n    await context.sync();\n  });\n}\n\nasync function labelFilter() {\n  await Excel.run(async (context) => {\n    // Add a PivotFilter to filter based on the strings of item labels.\n\n    // Get the PivotTable.\n    const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem(\"Farm Sales\");\n\n    // Get the \"Type\" field.\n    const field = pivotTable.hierarchies.getItem(\"Type\").fields.getItem(\"Type\");\n\n    // Filter out any types that start with \"L\" (\"Lemons\" and \"Limes\" in this case).\n    const filter: Excel.PivotLabelFilter = {\n      condition: Excel.LabelFilterCondition.beginsWith,\n      substring: \"L\",\n      exclusive: true\n    };\n\n    // Apply the label filter to the field.\n    field.applyFilter({ labelFilter: filter });\n\n    await context.sync();\n  });\n}\n\nasync function clearFilters() {\n  await Excel.run(async (context) => {\n    // Clear all the PivotFilters.\n\n    // Get the PivotTable.\n    const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem(\"Farm Sales\");\n    pivotTable.hierarchies.load(\"name\");\n    await context.sync();\n\n    // Clear the filters on each PivotField.\n    pivotTable.hierarchies.items.forEach((hierarchy) => {\n      hierarchy.fields.getItem(hierarchy.name).clearAllFilters();\n    });\n    await context.sync();\n  });\n}"
		}
	]
}