{
	"Templates": [
		{
			"Description": "Create and find merged ranges in a worksheet.",
			"SampleCodes": "async function createMergedRange() {\n  await Excel.run(async (context) => {\n    // Retrieve the worksheet and the table in that worksheet.\n    const sheet = context.workbook.worksheets.getActiveWorksheet();\n    const tableRange = sheet.getRange(\"B2:E6\");\n\n    // Create a merged range in the first row of the table.\n    const chartTitle = tableRange.getRow(0);\n    chartTitle.merge(true);\n\n    // Format the merged range.\n    chartTitle.format.horizontalAlignment = \"Center\";\n\n    await context.sync();\n  });\n}\n\nasync function getMergedRange() {\n  await Excel.run(async (context) => {\n    // Retrieve the worksheet and the table in that worksheet.\n    const sheet = context.workbook.worksheets.getActiveWorksheet();\n    const tableRange = sheet.getRange(\"B2:E6\");\n\n    // Retrieve the merged range within the table and load its details.\n    const mergedAreas = tableRange.getMergedAreasOrNullObject();\n    mergedAreas.load(\"address\");\n    mergedAreas.load(\"cellCount\");\n\n    // Select the merged range.\n    const range = mergedAreas.areas.getItemAt(0);\n    range.select();\n    await context.sync();\n\n    // Print out the details of the `mergedAreas` range object.\n    console.log(`Address of the merged range: ${mergedAreas.address}`);\n    console.log(`Number of cells in the merged range: ${mergedAreas.cellCount}`);\n\n    await context.sync();\n  });\n}\n\nasync function setup() {\n  await Excel.run(async (context) => {\n    context.workbook.worksheets.getItemOrNullObject(\"Sample\").delete();\n    const sheet = context.workbook.worksheets.add(\"Sample\");\n\n    // Create a table.\n    const data = [\n      [\"Product chart\", \"\", \"\", \"\"],\n      [\"Product\", \"Qty\", \"Unit Price\", \"Total Price\"],\n      [\"Almonds\", 2, 7.5, \"=C4 * D4\"],\n      [\"Coffee\", 1, 34.5, \"=C5 * D5\"],\n      [\"Chocolate\", 5, 9.56, \"=C6 * D6\"]\n    ];\n\n    const tableRange = sheet.getRange(\"B2:E6\");\n    tableRange.values = data;\n    tableRange.format.autofitColumns();\n\n    // Add a header row to the table.\n    const header = tableRange.getRow(1);\n    header.format.fill.color = \"#4472C4\";\n    header.format.font.color = \"white\";\n\n    sheet.activate();\n    await context.sync();\n  });\n}"
		}
	]
}