{
	"Templates": [
		{
			"Description": "Applies ( apply ) formulas of dynamic arrays about the ranges of the data. Gets and sets values and formulas for a range.",
			"SampleCodes": "async function setValue() {\n  await Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n    const range = sheet.getRange(\"C3\");\n    range.values = [[5]];\n    range.format.autofitColumns();\n\n    await context.sync();\n  });\n}\n\nasync function setFormulas() {\n  await Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n    const data = [[\"Total Price\"], [\"=C3 * D3\"], [\"=C4 * D4\"], [\"=C5 * D5\"], [\"=SUM(E3:E5)\"]];\n\n    const range = sheet.getRange(\"E2:E6\");\n    range.formulas = data;\n    range.format.autofitColumns();\n\n    await context.sync();\n  });\n}\n\nasync function getValues() {\n  await Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B2:E6\");\n    range.load(\"values\");\n\n    await context.sync();\n\n    console.log(JSON.stringify(range.values, null, 4));\n  });\n}\n\nasync function getTexts() {\n  await Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B2:E6\");\n    range.load(\"text\");\n\n    await context.sync();\n\n    console.log(JSON.stringify(range.text, null, 4));\n  });\n}\n\nasync function getFormulas() {\n  await Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B2:E6\");\n    range.load(\"formulas\");\n\n    await context.sync();\n\n    console.log(JSON.stringify(range.formulas, null, 4));\n  });\n}\n\nasync function copyTableHeaders() {\n  await Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n    // Set G4 to a formula that returns a dynamic array.\n    const targetCell = sheet.getRange(\"G4\");\n    targetCell.formulas = [[\"=A4:D4\"]];\n\n    // Get the address of the cells that the dynamic array spilled into.\n    const spillRange = targetCell.getSpillingToRange();\n    spillRange.load(\"address\");\n\n    // Fit the columns for readability.\n    sheet.getUsedRange().format.autofitColumns();\n    await context.sync();\n\n    console.log(`Copying the table headers spilled into ${spillRange.address}.`);\n  });\n}\n\nasync function applyFilterFunction() {\n  await Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n    /* Set G5 to a formula that returns a dynamic array.\n     * The FILTER formula filters the data in A5:D11 based on the values in the \"C\" column.\n     * The parameter for the filter is \"H2\".\n     */\n    const targetCell = sheet.getRange(\"G5\");\n    targetCell.formulas = [['=FILTER(A5:D11,C5:C11=H2,\"\")']];\n\n    // Get the address of the cells that the dynamic array spilled into.\n    const spillRange = targetCell.getSpillingToRange();\n    spillRange.load(\"address\");\n\n    // Fit the columns for readability.\n    sheet.getUsedRange().format.autofitColumns();\n    await context.sync();\n\n    console.log(`Applying the FILTER formula spilled into ${spillRange.address}.`);\n  });\n}\n\nasync function displaySpillInformation() {\n  await Excel.run(async (context) => {\n    // Check the current cell for any spill parents or spilling-to ranges.\n    const currentRange = context.workbook.getSelectedRange();\n\n    // Spill parent shows the ranges that are causing data to spill into the current cell.\n    const spillParent = currentRange.getSpillParentOrNullObject();\n    spillParent.load(\"address\");\n\n    // Spilling-to range shows the ranges to which this cell is applying the results of a dynamic array.\n    const spillRange = currentRange.getSpillingToRangeOrNullObject();\n    spillRange.load(\"address\");\n    await context.sync();\n\n    // Log the dynamic array information contained within the selected cell.\n    if (!spillParent.isNullObject) {\n      console.log(`The selected cell has a spill parent at ${spillParent.address}`);\n    }\n    if (!spillRange.isNullObject) {\n      console.log(`The selected cell is spilling into ${spillRange.address}`);\n    }\n\n    if (spillParent.isNullObject && spillRange.isNullObject) {\n      console.log(\"The selected cell is not involved with any dynamic arrays (or you have multiple cells selected).\");\n    }\n  });\n}"
		}
	]
}