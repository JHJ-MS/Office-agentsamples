{
  "Templates": [
    {
      "Description": "Get selected shapes, change shape property, add create a shape and textbox, change shape position, size",
      "SampleCodes": "async function getSelectedShapes() {\n  // Gets the shapes you selected on the slide and displays their IDs\n  await PowerPoint.run(async (context) => {\n    let finalTable = \"\";\n    const shapes = context.presentation.getSelectedShapes();\n    const shapeCount = shapes.getCount();\n    shapes.load(\"items\");\n    await context.sync();\n    shapes.items.map((shape, index) => {\n      console.log(shape.id);\n    });\n  });\n}\n\nasync function selectShapes() {\n  // Selects the first two shapes on slide 1.\n  await PowerPoint.run(async (context) => {\n    const slide1 = context.presentation.slides.getItemAt(0);\n    slide1.load(\"shapes\");\n    await context.sync();\n    const shapes = slide1.shapes;\n    const shape1 = shapes.getItemAt(0);\n    const shape2 = shapes.getItemAt(1);\n    shape1.load(\"id\");\n    shape2.load(\"id\");\n    await context.sync();\n    slide1.setSelectedShapes([shape1.id, shape2.id]); // select the two shape use id\n    await context.sync();\n  });\n}\n\nasync function changeFill() {\n  // Changes the selected shapes fill color to red.\n  await PowerPoint.run(async (context) => {\n    const shapes = context.presentation.getSelectedShapes();\n    shapes.load(\"items\");\n    await context.sync();\n    shapes.items.map((shape) => {\n      shape.fill.setSolidColor(\"red\");\n    });\n    await context.sync();\n  });\n}\n\nasync function createTextBox() {\n  // adds a text box to the shape collection, while specifying its text,\n  // location, and size. Then it names the text box.\n  await PowerPoint.run(async (context) => {\n    const shapes = context.presentation.slides.getItemAt(0).shapes;\n    const textbox = shapes.addTextBox(\"Hello!\", {\n      left: 100,\n      top: 300,\n      height: 300,\n      width: 450\n    });\n    textbox.name = \"Textbox\";\n\n    return context.sync();\n  });\n}\n\nasync function createShapes() {\n  // Creates random shapes on the selected slide.\n  await PowerPoint.run(async (context) => {\n    let finalTable = \"\";\n    const currentSlide = context.presentation.getSelectedSlides().getItemAt(0);\n    for (let i = 0; i < 20; i++) {\n      const rectangle = currentSlide.shapes.addGeometricShape(PowerPoint.GeometricShapeType.rectangle); // add a geometric shape\n      rectangle.height = 180;\n      rectangle.width = 160;\n      rectangle.left = 90;\n      rectangle.top = 60;\n      rectangle.fill.foregroundColor = \"yellow\";\n    }\n    await context.sync();\n  });\n}\n\nasync function changeShapePositionSize() {\n  // change shape position\n  await PowerPoint.run(async (context) => {\n    const shapes = context.presentation.getSelectedShapes();\n    shapes.load(\"items\");\n    await context.sync();\n    shapes.items.map((shape) => {\n      shape.load(\"width, height\"); // load width, height property\n    });\n\n    await context.sync();\n    shapes.items.map((shape) => {\n      shape.left = 15;\n      shape.top = 20;\n      shape.height = 50;\n      shape.width = 100;\n    });\n    await context.sync();\n  });\n}"
    }
  ]
}